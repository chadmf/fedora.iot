- name: Image Builder + Edge Demo
  hosts: osbuilder
  vars:
    workdir: /tmp/edge-workdir
    commit_tar: 41a0a265-1482-4805-8018-fd39c3825155-commit.tar
    ostree_container_image: quay.io/admiller/rhel-for-edge-hosting:latest
    build_ostree: true
    blueprint_version: "0.0.4"
    systemd_units_dir: "/etc/systemd/system/"
    service_name: "ostree-updoots"
    container_state: "installed"
    container_image: "quay.io/admiller/rhel-for-edge-hosting"
    container_tag: "latest"
    container_port_mapping: "8000:80"
  tasks:
    - name: Copy RHEL 8.4 Nightly yum repo file (VPN Required)
      ansible.builtin.copy:
        src: files/rhel84-nightly.repo
        dest: /etc/yum.repos.d/nightly.repo

    - name: Install the necessary packages
      ansible.builtin.yum:
        name:
          - osbuild-composer
          - composer-cli
          - cockpit-composer
          - bash-completion
        state: installed

    - name: Ensure osbuild repo directory exists
      ansible.builtin.file:
        path: /etc/osbuild-composer/repositories/
        state: directory

    - name: Copy RHEL 8.4 Nightly osbuild repo file (VPN Required)
      ansible.builtin.copy:
        src: secure_files/rhel-8-beta.json
        dest: /etc/osbuild-composer/repositories/rhel-8-beta.json

    - name: Build with composer-cli a RHEL for Edge Commit
      block:
        - name: make temp workingdir
          ansible.builtin.file:
            path: "{{ workdir }}"
            state: directory

        - name: copy blueprint template
          ansible.builtin.template:
            src: templates/blueprint.toml.j2
            dest: "/tmp/blueprint.toml"

        - name: push the blueprint
          ansible.builtin.shell: composer-cli blueprints push /tmp/blueprint.toml
          
        - name: build that shit
          ansible.builtin.shell: composer-cli compose start-ostree rhel-for-edge-demo rhel-edge-commit
          register: start_ostree

        - name: store the image uuid
          ansible.builtin.set_fact:
            ostree_image_uuid: "{{ start_ostree['stdout_lines'][-1].split()[1] }}"
        
        - name: wait for the ostree to build
          ansible.builtin.shell: composer-cli compose status
          register: compose_status
          until: "('RUNNING' not in compose_status['stdout']) and ('WAITING' not in compose_status['stdout'])"
          delay: 20
          retries: 100

        - name: extract tarball payload of the ostree from composer
          ansible.builtin.shell:
            cmd: "composer-cli compose image {{ ostree_image_uuid }}"
            chdir: "{{ workdir }}/"


        - name: copy Containerfile to temp working dir
          ansible.builtin.copy:
            src: files/Containerfile
            dest: "{{ workdir }}/Containerfile"

        - name: copy edge.ks to temp working dir
          ansible.builtin.copy:
            src: files/edge.ks
            dest: "{{ workdir }}/edge.ks"

        - name: build the podman image
          containers.podman.podman_image:
            name: "{{ ostree_container_image }}"
            path: "{{ workdir }}"
            build:
              extra_args:
                commit: "{{ ostree_image_uuid }}-commit.tar"
              format: oci
      when: build_ostree == true

    - name: import fedora.iot.container_lifecycle role
      ansible.builtin.import_role:
        name: fedora.iot.container_lifecycle


- name: Run the ostree update and deploy a container on the RHEL for Edge host
  hosts: rheledge
  vars:
    systemd_units_dir: "/etc/systemd/system/"
    service_name: "redis"
    container_state: "installed"
    container_image: "docker.io/redis"
    container_tag: "6.0.9"
    container_port_mapping: "6379:6379"
    container_healthcheck_cmd: "/usr/local/bin/redis-cli info"
    container_healthcheck_interval: "30s"
    container_healthcheck_retries: 5
    ostree_remote_name: rhel-for-edge-demo
    ostree_remote_url: 192.168.122.15:8000/
    ostree_content_url: 192.168.122.15:8000/repo
    ostree_gpg_verify: "false"
  tasks:
    - name: apply templated ostree remote config
      ansible.builtin.template:
        src: templates/ostree-remote.j2
        dest: /etc/ostree/remotes.d/rhel-for-edge.conf

    - name: switch config to stage for rhc 
      ansible.builtin.copy:
        src: files/rhc-config.toml
        dest: /etc/rhc/config.toml

    - name: run rpmostree update
      fedora.iot.rpm_ostree_upgrade:
        allow_downgrade: yes

    - name: reboot edge node
      ansible.builtin.reboot:
        reboot_timeout: 3600

    - name: import fedora.iot.container_lifecycle role
      ansible.builtin.import_role:
        name: fedora.iot.container_lifecycle

