- name: Image Builder + Edge Demo
  hosts: osbuilder
  vars:
    workdir: /tmp/edge-workdir
    build_ostree: true
    systemd_units_dir: "/etc/systemd/system/"
    service_name: "ostree-updoots"
    blueprint_version: "0.0.11"
    blueprint_packages:
      - "rhc"
      - "rhc-worker-playbook"
      - "subscription-manager"
      - "subscription-manager-plugin-ostree"
      - "insights-client"
      - "ansible-core"
    container_state: "installed"
    container_image: ""
    container_tag: "latest"
    container_port_mapping: "8000:80"
  tasks:
    - name: Install the necessary packages
      ansible.builtin.yum:
        name:
          - osbuild-composer
          - composer-cli
          - cockpit-composer
          - bash-completion
          - ansible-core
        state: installed

    - name: enable composer service_name
      ansible.builtin.service:
        name: osbuild-composer.socket
        state: started
    
    - name: enable composer service_name
      ansible.builtin.service:
        name: cockpit.socket
        state: started

    - name: Build with composer-cli a RHEL for Edge Commit
      block:
        - name: make temp workingdir
          ansible.builtin.file:
            path: "{{ workdir }}"
            state: directory

        - name: copy blueprint template
          ansible.builtin.template:
            src: templates/blueprint.toml.j2
            dest: "/tmp/blueprint.toml"

        - name: push the blueprint
          ansible.builtin.shell: composer-cli blueprints push /tmp/blueprint.toml
          
        - name: build image with composer-cli
          ansible.builtin.shell: composer-cli compose start-ostree rhel-for-edge-demo rhel-edge-commit
          register: start_ostree

        - name: store the image uuid
          ansible.builtin.set_fact:
            ostree_image_uuid: "{{ start_ostree['stdout_lines'][-1].split()[1] }}"
        
        - name: wait for the ostree to build
          ansible.builtin.shell: composer-cli compose status
          register: compose_status
          until: "('RUNNING' not in compose_status['stdout']) and ('WAITING' not in compose_status['stdout'])"
          delay: 20
          retries: 100

        - name: extract tarball payload of the ostree from composer
          ansible.builtin.shell:
            cmd: "composer-cli compose image {{ ostree_image_uuid }}"
            chdir: "{{ workdir }}/"


        - name: copy Containerfile to temp working dir
          ansible.builtin.copy:
            src: files/Containerfile
            dest: "{{ workdir }}/Containerfile"

        - name: copy edge.ks to temp working dir
          ansible.builtin.copy:
            src: files/edge.ks
            dest: "{{ workdir }}/edge.ks"

        - name: build the podman image
          containers.podman.podman_image:
            name: "{{ container_image }}"
            tag: "{{ container_tag }}"
            path: "{{ workdir }}"
            build:
              extra_args: "--build-arg commit={{ ostree_image_uuid }}-commit.tar"
              format: oci
      when: build_ostree == true

